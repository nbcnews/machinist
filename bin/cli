#!/usr/bin/env node
const program = require('commander')
const getConfig = require('./config')
const init = require('./initialize')
const build = require('./build')
const publish = require('./publish')

let config = {} // only used for build & publish
let cmdName = null

console.log('## DEBUG - dirname:', __dirname)
console.log('## DEBUG - cwd:', process.cwd())

/** Usage */
program
  .option('-i, --init <project>', 'the name (slug) of project')
  .option('-b, --build', 'build the project')
  .option('-p, --publish <type>', 'publish assets|story')
  .parse(process.argv)
//  .usage('<project> [month, year]')

/** Help **/
program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log('    # create a new project from template, with optional month and year setting.')
  console.log('    $ machinist -i my-project-name 7 2017')
  console.log()
})

console.log('## DEBUG - program.args:', program.args)
if (program.args[0] === '?') {
  cmdName = 'help'
  program.help()
}

// commands: init, build & publish
if (program.init) {
  cmdName = 'initialize'
  console.log(`## DEBUG - ${cmdName} ${program.init}`)
  init.project(program)
}

if (program.build || program.publish) {
  config = getConfig()
  cmdName = (program.build) ? 'build' : 'publish-' + program.publish
  console.log(`
  ### DEBUG - ${cmdName}
          projectName: ${config.projectName}
          env.BUILD: ${process.env.BUILD}
          devBuild:  ${config.devBuild}
  `)
  if (program.build) {
    build(config)
  }

  if (program.publish) {
    publish.story(config)
  }
}

/** exit msg **/
process.on('exit', () => console.log('\n....machinist', cmdName, 'exited process....\n'))
